/**
 */
package exploitation.impl;

import exploitation.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ExploitationFactoryImpl extends EFactoryImpl implements ExploitationFactory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static ExploitationFactory init() {
		try {
			ExploitationFactory theExploitationFactory = (ExploitationFactory)EPackage.Registry.INSTANCE.getEFactory(ExploitationPackage.eNS_URI);
			if (theExploitationFactory != null) {
				return theExploitationFactory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new ExploitationFactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ExploitationFactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
			case ExploitationPackage.EXPLOITATION: return createExploitation();
			case ExploitationPackage.SURFACE: return createSurface();
			case ExploitationPackage.PARCELLE: return createParcelle();
			case ExploitationPackage.RESSOURCE: return createRessource();
			case ExploitationPackage.RESSOURCE_TYPE: return createRessourceType();
			case ExploitationPackage.MAIS: return createMais();
			case ExploitationPackage.BLE: return createBle();
			case ExploitationPackage.SORGHO: return createSorgho();
			case ExploitationPackage.OVIN: return createOvin();
			case ExploitationPackage.BOVIN: return createBovin();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Exploitation createExploitation() {
		ExploitationImpl exploitation = new ExploitationImpl();
		return exploitation;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Surface createSurface() {
		SurfaceImpl surface = new SurfaceImpl();
		return surface;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Parcelle createParcelle() {
		ParcelleImpl parcelle = new ParcelleImpl();
		return parcelle;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Ressource createRessource() {
		RessourceImpl ressource = new RessourceImpl();
		return ressource;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RessourceType createRessourceType() {
		RessourceTypeImpl ressourceType = new RessourceTypeImpl();
		return ressourceType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Mais createMais() {
		MaisImpl mais = new MaisImpl();
		return mais;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Ble createBle() {
		BleImpl ble = new BleImpl();
		return ble;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Sorgho createSorgho() {
		SorghoImpl sorgho = new SorghoImpl();
		return sorgho;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Ovin createOvin() {
		OvinImpl ovin = new OvinImpl();
		return ovin;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Bovin createBovin() {
		BovinImpl bovin = new BovinImpl();
		return bovin;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ExploitationPackage getExploitationPackage() {
		return (ExploitationPackage)getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
	@Deprecated
	public static ExploitationPackage getPackage() {
		return ExploitationPackage.eINSTANCE;
	}

} //ExploitationFactoryImpl
