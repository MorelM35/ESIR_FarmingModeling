/**
 */
package exploitation.util;

import exploitation.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see exploitation.ExploitationPackage
 * @generated
 */
public class ExploitationSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static ExploitationPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ExploitationSwitch() {
		if (modelPackage == null) {
			modelPackage = ExploitationPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @parameter ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
			case ExploitationPackage.EXPLOITATION: {
				Exploitation exploitation = (Exploitation)theEObject;
				T result = caseExploitation(exploitation);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.SURFACE: {
				Surface surface = (Surface)theEObject;
				T result = caseSurface(surface);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.PARCELLE: {
				Parcelle parcelle = (Parcelle)theEObject;
				T result = caseParcelle(parcelle);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.ELEVAGE: {
				Elevage elevage = (Elevage)theEObject;
				T result = caseElevage(elevage);
				if (result == null) result = caseAtelier(elevage);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.CULTURE: {
				Culture culture = (Culture)theEObject;
				T result = caseCulture(culture);
				if (result == null) result = caseAtelier(culture);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.RESSOURCE: {
				Ressource ressource = (Ressource)theEObject;
				T result = caseRessource(ressource);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.RESSOURCE_TYPE: {
				RessourceType ressourceType = (RessourceType)theEObject;
				T result = caseRessourceType(ressourceType);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.ATELIER: {
				Atelier atelier = (Atelier)theEObject;
				T result = caseAtelier(atelier);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.MAIS: {
				Mais mais = (Mais)theEObject;
				T result = caseMais(mais);
				if (result == null) result = caseCulture(mais);
				if (result == null) result = caseAtelier(mais);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.BLE: {
				Ble ble = (Ble)theEObject;
				T result = caseBle(ble);
				if (result == null) result = caseCulture(ble);
				if (result == null) result = caseAtelier(ble);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.SORGHO: {
				Sorgho sorgho = (Sorgho)theEObject;
				T result = caseSorgho(sorgho);
				if (result == null) result = caseCulture(sorgho);
				if (result == null) result = caseAtelier(sorgho);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.OVIN: {
				Ovin ovin = (Ovin)theEObject;
				T result = caseOvin(ovin);
				if (result == null) result = caseElevage(ovin);
				if (result == null) result = caseAtelier(ovin);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case ExploitationPackage.BOVIN: {
				Bovin bovin = (Bovin)theEObject;
				T result = caseBovin(bovin);
				if (result == null) result = caseElevage(bovin);
				if (result == null) result = caseAtelier(bovin);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Exploitation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Exploitation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExploitation(Exploitation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Surface</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Surface</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSurface(Surface object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Parcelle</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Parcelle</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseParcelle(Parcelle object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Elevage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Elevage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElevage(Elevage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Culture</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Culture</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCulture(Culture object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ressource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ressource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRessource(Ressource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ressource Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ressource Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRessourceType(RessourceType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Atelier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Atelier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAtelier(Atelier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Mais</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Mais</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMais(Mais object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ble</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ble</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBle(Ble object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sorgho</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sorgho</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSorgho(Sorgho object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ovin</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ovin</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOvin(Ovin object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bovin</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bovin</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBovin(Bovin object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //ExploitationSwitch
