grammar org.xtext.activity.Act with org.eclipse.xtext.common.Terminals

// automatically generated by Xtext

import "platform:/resource/FarmingModeling/model/activity.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/FarmingModeling/model/exploitation.ecore" as exploitation


PeriodicActivity returns PeriodicActivity:
	{PeriodicActivity}
	'PeriodicActivity'
	name=EString
	'{'
		('atelier' atelier=[exploitation::Atelier|EString] ',')?
		'start' 'from' start=Date 'to' end=Date ','
		('every' (periodicityNumber=EInt)? periodicityType=Periodicity ',')?
		('allocate' '{' resAllocation+=ResAllocation ( "," resAllocation+=ResAllocation)* '} ,' )?
		('rules' '{' rule+=Rule ( "," rule+=Rule)* '}' )?
	'}';

enum Periodicity returns periodicity:
	months|days|weeks|years|hours
;

Atelier returns exploitation::Atelier:
	Atelier_Impl | Elevage | Culture;

Date returns Date:
	{Date}
	day=EInt 
	;

ResAllocation returns RessourceAllocation:
	{RessourceAllocation}
	'reserve' ressource=[exploitation::Ressource] 
	'for' duree=EInt
	;

EString returns ecore::EString:
	STRING | ID;

Rule returns Rule:
	{Rule}
	('pre' pre+=Predicate ( ","'pre' pre+=Predicate)*)?
	;

Atelier_Impl returns exploitation::Atelier:
	{exploitation::Atelier}
	'Atelier'
	'{'
		('activity' activity+=[PeriodicActivity|EString])?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

RessourceType returns exploitation::RessourceType:
	{exploitation::RessourceType}
	'RessourceType'
	name=EString
	;

Predicate returns Predicat:
	{Predicat}
	
	;

Elevage returns exploitation::Elevage:
	{exploitation::Elevage}
	'Elevage'
	'{'
		('activity' activity+=[PeriodicActivity|EString])?
	'}';

Culture returns exploitation::Culture:
	{exploitation::Culture}
	'Culture'
	'{'
		('activity' activity+=[PeriodicActivity|EString])?
	'}';

